@isTest 
private class BZ_CloseRecruitmentController_TEST {
    static testMethod void validateRun() {
        
         Campaign oldCampaign = new Campaign();
            // Campaign Details Section
             String campaignBeingClosedName = 'TestCamp22';
        	oldCampaign.name=campaignBeingClosedName;
            //oldCampaign.Name ='TestCampaign';
            //System.debug('newCampaignName -- : '+newCampaignName);
            oldCampaign.Status = 'In Progress';
            oldCampaign.Type ='Leadership Coaches' ;
            oldCampaign.BZ_Region__c = 'Bay Area Schwab-KIPP program';
            oldCampaign.StartDate =Date.today();
            oldCampaign.EndDate = Date.today();
            //Program Information Fields Section
            oldCampaign.Program_Title__c='Test Program';      
            oldCampaign.Program_Site__c='Test Site';
            oldCampaign.Application_Type__c ='student';
            oldCampaign.Program_Semester__c ='Spring 2019';
            oldCampaign.Coach_Course_ID__c='43';
            oldCampaign.Target_Course_ID_In_LMS__c='29';
            oldCampaign.Meeting_Times__c ='5 TO 7';
            oldCampaign.Section_Name_Site_Prefix__c='Test';
            oldCampaign.Section_Name_in_LMS_Coach_Course__c='Test Course';
            oldCampaign.Volunteer_Opportunities__c=null;
            oldCampaign.Sourcing_Info_Options__c='Test';
            //End of the Program Information Fields
            //Email Fields section
            
        	String reinviteEmailTemplateName ='BZ ACCEPTED:Newark Spring16 Leadership Coach - V1';
       		//campaign.Previous_Candidate_New_Invite__c = reinviteEmailTemplateName;
            oldCampaign.Invite_Email_Template__c='BZ APP OPEN:Participant';
            oldCampaign.Intro_Email_Template__c=null;
            oldCampaign.App_Open_Email_Template__c='BZ ACCEPTED:Newark Fall15 Leadership Coach - V1';
            oldCampaign.App_Rejected_Email_Template__c=null;
            oldCampaign.App_Submit_Reminder_Template__c=null;
            oldCampaign.App_Waitlisted_Email_Template__c=null;
            oldCampaign.App_Not_Accepted_Email_Template__c=null;
            oldCampaign.App_Interview_Requested_Email_Template__c=null;
            oldCampaign.App_Accepted_Email_Template__c=null;
            oldCampaign.Previous_Candidate_New_Invite__c =reinviteEmailTemplateName;
            oldCampaign.Recruitment_Closed__c=True;
            oldCampaign.ProcessType__c='Clone';
           insert oldCampaign;
        
    	ApexPages.StandardController sc = new ApexPages.standardController(oldCampaign);
            
        PageReference pageRef = Page.BZ_CloseRecruitment;
        Test.setCurrentPage(pageRef);
        Boolean exceptionCaught = false;
    	BZ_CloseRecruitmentController controller = new BZ_CloseRecruitmentController(sc);
        //PageReference result1= controller.createNewCampaign(oldCampaign);
        String newCampaignName = 'newTestCamp';
        String newAvailableMeetingTimes = '6 To 9';
        string parentId=oldCampaign.Id;
        controller.newCampaignName = newCampaignName;
        controller.newAvailableMeetingTimes = newAvailableMeetingTimes;
        controller.m_campaignSnapshot.ParentId=parentId;
        Test.startTest();
        try {
            
             PageReference result = controller.run();
        } catch(BZ_CloseRecruitmentController.BZ_CloseRecruitmentException e){
            exceptionCaught = true;
        }
        Test.stopTest();
        System.AssertEquals(true, exceptionCaught);
        System.AssertEquals(false, BZ_CloseRecruitmentController.IsCloseRecruitmentRunning);
        System.AssertEquals(false, BZ_Notifications.disableNotifyApplyNow);
        System.AssertEquals(false, BZ_CloseRecruitmentController.IsCloseRecruitmentRunning);
        System.assert(controller.newCampaignName == newCampaignName, 'The BZ_CloseRecruitmentController should have newCampaignName = '+newCampaignName +' . Not newCampaignName ='+controller.newCampaignName);
        System.assert(controller.newAvailableMeetingTimes == newAvailableMeetingTimes, 'The BZ_CloseRecruitmentController should have newAvailableMeetingTimes = '+newAvailableMeetingTimes +' . Not newAvailableMeetingTimes ='+controller.newAvailableMeetingTimes);
        Campaign updatedCampaign = [Select ParentId FROM Campaign WHERE Id = :oldCampaign.Id];
        Campaign campaignSnapshot = [SELECT Id FROM Campaign WHERE Name = :campaignBeingClosedName];
        System.assert(campaignSnapshot != null, 'Didnt find a campaign snapshot named ' + campaignBeingClosedName);
        System.assert(updatedCampaign.ParentId == campaignSnapshot.Id, 'The Campaign Snapshot should be set to the parent of the Active campaign.  updatedCampaign.ParentId = '+updatedCampaign.ParentId +' . Not campaignSnapshot.Id ='+campaignSnapshot.Id);
        System.Assert(controller.getEmailTemplates() != null, 'controller.getEmailTemplates() is null');
        System.Assert(campaignSnapshot.Id!=null,'Successfully Created New Campaign');
        System.Assert(campaignSnapshot.Id==null,'New Campaign not created');
        
    }
    
    static testMethod void validateFailedRun() {
        Contact campaignOwner = new Contact(FirstName='Test', LastName='CampaignOwner2', OwnerId=userInfo.getUserId());
        insert campaignOwner;
        
        // Note: the Campaign.OwnerId refers to the User, so we need to use campaignOwner.OwnerId instead of Id.  See the child relationship of the User object.
        Campaign campaign = BZ_CampaignFactory_TEST.create(campaignOwner.OwnerId, 'Blah');
        campaign.Previous_Candidate_New_Invite__c = 'PrevEmailTemplate';
        insert campaign;
        
    	ApexPages.StandardController sc = new ApexPages.standardController(campaign);
            
        PageReference pageRef = Page.BZ_CloseRecruitment;
        Test.setCurrentPage(pageRef);
        
    	BZ_CloseRecruitmentController controller = new BZ_CloseRecruitmentController(sc);
        
        Boolean exceptionCaught = false;
        Test.startTest();
        // Don't set the newCampaign name, which causes it to fail.
        try {
            PageReference result = controller.run();
        } catch(BZ_CloseRecruitmentController.BZ_CloseRecruitmentException e){
            exceptionCaught = true;
        }
        Test.stopTest();
        
        System.AssertEquals(true, exceptionCaught);
        System.AssertEquals(false, BZ_Notifications.disableNotifyApplyNow);
        System.AssertEquals(false, BZ_CloseRecruitmentController.IsCloseRecruitmentRunning);
        
    }
}
